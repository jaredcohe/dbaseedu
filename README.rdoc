== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.

-----

Starting each time:
rails s
cd client then grunt serve
pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start
(and to stop postgresql: pg_ctl -D /usr/local/var/postgres stop -s -m fast)

-----

STEP BY STEP

http://www.angularonrails.com/ruby-on-rails-angularjs-single-page-application/

gem install rails-api

rails-api new dbase-edu -T -d postgresql

cd dbase-edu

pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start

createuser -P -s -e dbaseedu
set pwd as: dbaseedu

rake db:create

add to Gemfile
group :test do
  gem 'rspec-rails'
end

bundle install

rails g rspec:install

rails g scaffold group name:string
			invoke  active_record
      create    db/migrate/20140813015238_create_groups.rb
      create    app/models/group.rb
      invoke    rspec
      create      spec/models/group_spec.rb
      invoke  api_resource_route
       route    resources :groups, except: [:new, :edit]
      invoke  scaffold_controller
      create    app/controllers/groups_controller.rb
      invoke    rspec
      create      spec/controllers/groups_controller_spec.rb

rake db:migrate

rails s

added testing

# isntall Yeoman, a front-end scaffolding tool
npm install -g yo
npm install -g generator-angular

mkdir client
cd client

# generate angular app: yo angular dbase-edu

# start grunt server
grunt serve

# grunt-connect-proxy to forward requests from Grunt server on port 9000 to rails on port 3000
npm install --save-dev grunt-connect-proxy
# changes to Gruntfile.js


